
# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
PROJECT_NAME = kubernetes-autoscaler
CLUSTER_NAME = test1-cluster
NAMESPACE = default
HELM_REPOS = prometheus-community ingress-nginx kedacore
# –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ñ–ª–∞–≥–æ–≤ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
MAKEFLAGS += --no-print-directory

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
.PHONY: setup deploy help grafana-info grafana
.DEFAULT_GOAL := help

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π helm
setup:
	@echo "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
	$(foreach repo,$(HELM_REPOS), \
		-helm repo add $(repo) https://$(repo).github.io/helm-charts;)
	helm repo update
	@echo "‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"

# –ü–æ–ª–Ω–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ
deploy: setup
	@echo " –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ $(PROJECT_NAME)..."
	kind create cluster --name $(CLUSTER_NAME) --config=kind-rps-cluster.yaml
	kubectl config use-context kind-$(CLUSTER_NAME)
	docker build -t my-static-nginx:latest .
	kind load docker-image my-static-nginx:latest --name $(CLUSTER_NAME)

	helm install prometheus-stack prometheus-community/kube-prometheus-stack \
  --namespace monitoring \
  --create-namespace \
  --set prometheus.prometheusSpec.serviceMonitorSelectorNilUsesHelmValues=false
  
	helm install keda kedacore/keda --namespace keda-system --create-namespace

	kubectl wait --for=condition=Ready pods --all -n monitoring --timeout=300s
	kubectl wait --for=condition=Ready pods --all -n keda-system --timeout=120s

	helm install ingress-nginx ingress-nginx/ingress-nginx \
		--namespace ingress-nginx --create-namespace \
		--set controller.service.type=NodePort \
		--set controller.service.nodePorts.http=30080 \
		--set controller.metrics.enabled=true \
		--set controller.metrics.serviceMonitor.enabled=true \
		--set controller.metrics.serviceMonitor.additionalLabels.release="prometheus"

	kubectl wait --for=condition=Ready pods --all -n ingress-nginx --timeout=180s

	helm install my-static-site my-nginx/ --namespace $(NAMESPACE)
	kubectl apply -f my-nginx/keda-nginx-simple.yaml --namespace $(NAMESPACE)
	kubectl apply -f my-nginx/nginx-ingress-fixed.yaml --namespace $(NAMESPACE)

	@echo "–†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ"


check:
	@echo " –ö–æ–º–∞–Ω–¥–∞ 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã..."
	@echo "===  –°–¢–ê–¢–£–° –°–ò–°–¢–ï–ú–´ ==="
	@echo "–ö–ª–∞—Å—Ç–µ—Ä—ã Kind:"
	@kind get clusters
	@echo ""
	@echo "Helm releases:"
	@helm list --all-namespaces
	@echo ""
	@echo "–°—Ç–∞—Ç—É—Å –ø–æ–¥–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:"
	@kubectl get pods -l app=my-static-site
	@echo ""
	@echo "HPA —Å—Ç–∞—Ç—É—Å:"
	@kubectl get hpa
	@echo ""
	@echo "ScaledObject —Å—Ç–∞—Ç—É—Å:"
	@kubectl get scaledobject
	@echo ""
	@echo "===  –î–û–°–¢–£–ü–´ ==="
	@echo "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: http://localhost:8080"
	@$(MAKE) grafana-info	 
	@echo ""
	@echo "=== –ù–ê–ì–†–£–ó–û–ß–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï ==="
	@echo "–°–æ–∑–¥–∞–µ–º –Ω–∞–≥—Ä—É–∑–∫—É 10 RPS –Ω–∞ 2 –º–∏–Ω—É—Ç—ã..."
	@(for i in $$(seq 1 1200); do curl -s http://localhost:8080/ >/dev/null 2>&1 & sleep 0.1; done) & \
	CURL_PID=$$!; \
	echo "Curl —Ç–µ—Å—Ç –∑–∞–ø—É—â–µ–Ω (PID: $$CURL_PID)"; \
	echo ""; \
	echo "===================================================="; \
	tput sc 2>/dev/null || printf "\033[s"; \
	for i in $$(seq 1 85); do \
		tput rc 2>/dev/null || printf "\033[u"; \
		tput ed 2>/dev/null || printf "\033[J"; \
		echo "–ú–û–ù–ò–¢–û–†–ò–ù–ì –ê–í–¢–û–°–ö–ï–ô–õ–ò–ù–ì–ê - $$(date +%H:%M:%S) ($$i/85)"; \
		echo "===================================================="; \
		kubectl get hpa 2>/dev/null || echo "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö HPA"; \
		echo ""; \
		kubectl get pods -l app=my-static-site 2>/dev/null || echo "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ–¥–æ–≤"; \
		sleep 3; \
	done
	@echo ""
	@echo "–î–ª—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ Locust: make locust"

# –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ—Å—Ç—É–ø–µ –∫ Grafana
grafana-info:
	@echo " –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ Grafana:"
	@echo "URL: http://localhost:3000"
	@echo "–õ–æ–≥–∏–Ω: admin"
	@echo -n "–ü–∞—Ä–æ–ª—å: "
	@kubectl get secret -n monitoring prometheus-stack-grafana -o jsonpath="{.data.admin-password}" | base64 --decode && echo



# –ó–∞–≥—Ä—É–∑–∫–∞ –Ω—É–∂–Ω—ã—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫ –¥–ª—è locust
locust_uploading:
	python3 -m venv venv
	source venv/bin/activate
	pip install -r requirements.txt

# locust –¥–ª—è –Ω–∞–≥—Ä–∑—É–∫–∏
locust: locust_uploading
	@echo "–ó–∞–ø—É—Å–∫ locust(Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏)..."
	@echo "–û—Ç–∫—Ä–æ–π—Ç–µ Web UI Locust: http://localhost:8089"
	@echo "–û–¥–∏–Ω users —Ä–∞–≤–µ–Ω 5 RPS"
	locust -f test_5rps.py --host=http://localhost:8080 --users=2 --spawn-rate=1


manifest_update:
	helm upgrade my-static-site my-nginx/ --namespace $(NAMESPACE)
	kubectl apply -f my-nginx/keda-nginx-simple.yaml --namespace $(NAMESPACE)
	kubectl apply -f my-nginx/nginx-ingress-fixed.yaml --namespace $(NAMESPACE)


# –°–ø—Ä–∞–≤–∫–∞
help:
	@echo " –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
	@echo "  setup   - –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Helm —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤"
	@echo "  deploy  - –ü–æ–ª–Ω–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞"
	@echo "  grafana - –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –∫ –≥—Ä–∞—Ñ–∞–Ω–µ"
	@echo "  locust  - –î–æ—Å—Ç—É–ø –∫ locust –¥–ª—è –Ω–∞–≥—Ä—É–∑–æ—á–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"
	

# –ü–µ—Ä–µ–¥–∞—á–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏–∑ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
deploy-custom:
	make deploy CLUSTER_NAME=$(name) NAMESPACE=$(ns)
